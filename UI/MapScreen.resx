<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbMoveMapUp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAjCAYAAACD1LrRAAAABGdBTUEAALGPC/xhBQAAAMhJREFUWEfF
        jVEKg0AUxLyk9z+KpTRCK6mM46qBfIhvM1PLMs/LWz7vYR29dXw7usrva7DBbzkbiw2ZnI/BBvbk2Tks
        nMjzDgsekcwxLNRILsMCZyS7jz0cIXnHHoyUmV/s8AqZ+2AHV/rI6Opzw/+w40ZyORZpJJdjkUZyORZp
        JJdjkUZyORZpJJdjkUZyORZpJJdjkUZyORZpJJdjkUZyORZpJJdjkUZyORZpJJdjkUZyORZpJJdjkUZy
        ORZpJJdjkUZyG6bpBaRcWftSqnGcAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pbMoveMapDown.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAjCAYAAACD1LrRAAAABGdBTUEAALGPC/xhBQAAAMZJREFUWEfF
        j1EKg0AUxLyk9z+KpSVCS1MZx90ayJdvM7j8YlvXbYTkcizSSC7HIo3kcizSSC7HIo3kcizSSC7HIo3k
        cizSSC7HIo3kcizSSC7HIo3kcizSSC7HIo3kcizSSC7HIo3kcizSSC7HIo3kcizSSC7HIo3kvrHjf3jf
        8B1//RrdsYMZMveJHY6UGccejJD8MfbwimQzLNBI7hwWOiOZDgsm8vwaFj6SZ2OwAZPzsdjQu5zNwQaf
        8nkut4zuXBtdlgdOqFn7Zx4UDgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbMoveMapRight.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAeCAYAAACmPacqAAAABGdBTUEAALGPC/xhBQAAAKhJREFUWEft
        kUEOgzAQxPJJ/v8U0MJEoWC4tDvZQy35UDHRWmr7JeuyrKF+zqXHlAg6x0wPusZMDaKYUJ+9UEhXk3fo
        YZY6+Qw9ylRnGXqQrU7fobFDnf+Ehi6VMKCRU2Uc0MCtUmrEhKViwn8MWeZv2kMC+uhUGQc0cKmEAY1c
        KmFAo2x1+g6NM9VZhh5kqZMeKKCriQ+KCPXZS5mQoExIUCYk+C6ktQ2puVyjwnGafQAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="pbMoveMapLeft.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAeCAYAAACmPacqAAAABGdBTUEAALGPC/xhBQAAAKhJREFUWEfN
        kUEKw0AMxPaT+f9TUkxm2TZRcgj12AIdSmaxoOMt+7btoX7WMUPKY75DSmPOIWUxFBLqsw+KmGrigQKy
        1EmGHmSqs1donK1O/0JDhzq/oJFLJRzQwKky6kPCNiFhm5CwV0yrv2lCH90q5YAGTpWxoJFLJSxo5FIJ
        V2icrU4z9CBTnb2HHmWpk8/Qw6kmXigk1Gc/rWKCVjFBq5jg/zFjfABU/Vyj/zo+SgAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAqAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB8td4AAAB8td4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAB8td4AAAAAAAAAAAAAAAAAAAAAAAAAAAB8td58td58td58td4AAAB8td58td58td58td58
        td4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8td58td58td58td4AAAAAAAAAAAB8td58
        td58td58td58td58td58td58td4AAAB8td58td58td58td58td58td58td58td58td4AAAAAAAAAAAB8
        td58td58td58td58td58td58td58td4AAAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8
        td58td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58td58td58td58td58td4A
        AAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58td58td58td58td58
        td58td4AAAB8td58td58td58td58td58td58td58td58td4AAAAAAAB8td58td58td58td58td58td58
        td58td58td4AAAB8td58td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58td58
        td58td58td58td4AAAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58
        td58td58td58td58td58td4AAAB8td58td58td58td58td58td58td58td58td4AAAAAAAB8td58td58
        td58td58td58td58td4AAAAAAAAAAAB8td4AAAAAAAB8td58td58td58td58td58td58td4AAAB8td58
        td58td58td58td58td58td58td58td4AAAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8
        td58td58td58td4AAAB8td58td58td58td58td4AAAB8td58td58td58td58td58td58td58td58td4A
        AAAAAAB8td58td58td58td58td4AAAB8td58td58td4AAAB8td58td58td58td58td4AAAB8td58td58
        td58td4AAAB8td58td4AAP98td58td58td4AAP98td58td4AAAAAAAB8td58td58td58td4AAAB8td58
        td58td58td4AAAB8td58td58td58td58td58td58td58td58td58td4AAAB8td58td58td4AAP98td4A
        AP98td58td58td4AAAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58
        td58td58td4AAAB8td58td4AAAB8td58td58td58td4AAP98td58td58td58td4AAAAAAAB8td58td58
        td4AAAB8td58td58td58td58td4AAAB8td58td58td58td58td58td58td4AAAB8td58td4AAAB8td58
        td58td4AAP98td4AAP98td58td58td4AAAAAAAB8td58td58td4AAAB8td58td58td58td58td4AAAB8
        td58td58td58td58td58td58td58td58td58td4AAAB8td58td4AAP98td58td58td4AAP98td58td4A
        AAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58td58td58td58td58
        td58td4AAAB8td58td58td58td58td58td58td58td58td4AAAAAAAB8td58td58td58td58td58td58
        td58td58td4AAAB8td58td58td58td58td58td4AAAB8td58td58td4AAAB8td58td58td58td58td58
        td58td58td58td4AAAAAAAB8td58td58td58td4AAAB8td58td58td58td4AAAB8td58td58td58td58
        td58td4AAAB8td58td58td4AAAB8td58td58td58td58td4AAAB8td58td58td4AAAAAAAB8td58td58
        td58td4AAAB8td58td58td58td4AAAB8td58td58td58td58td58td58td58td58td58td4AAAB8td58
        td58td58td58td4AAAB8td58td58td4AAAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8
        td58td58td58td58td4AAAB8td58td58td58td4AAAB8td58td58td58td58td58td58td58td58td4A
        AAAAAAB8td58td58td58td58td4AAAB8td58td58td4AAAB8td58td58td58td58td4AAAB8td58td58
        td58td4AAAB8td58td58td58td58td58td4AAAB8td58td4AAAAAAAB8td58td58td58td58td4AAAB8
        td58td58td4AAAB8td58td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58td58
        td4AAAB8td58td4AAAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td4A
        AAB8td58td58td58td58td4AAAB8td58td58td58td58td58td58td58td58td4AAAAAAAB8td58td58
        td58td58td58td4AAAB8td58td4AAAB8td58td58td58td4AAAB8td58td58td58td58td4AAAB8td58
        td58td58td58td4AAAB8td58td58td4AAAAAAAB8td58td58td58td58td58td4AAAB8td58td4AAAB8
        td58td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td4AAAB8td58td58td58td4A
        AAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8td58td58td58td58td4AAAB8td58td58
        td58td4AAAB8td58td58td58td58td58td58td58td58td4AAAAAAAB8td58td58td4AAAB8td58td58
        td58td58td4AAAB8td58td58td58td58td58td4AAAB8td58td58td4AAAB8td58td4AAAB8td58td58
        td58td58td58td4AAAAAAAB8td58td4AAAB8td58td58td58td58td58td4AAAB8td58td58td58td58
        td58td58td58td4AAAAAAAAAAAB8td4AAAB8td58td58td58td58td58td58td4AAAAAAAB8td58td58
        td58td58td58td58td58td4AAAAAAAAAAAB8td58td58td58td58td58td58td58td58td4AAAB8td58
        td58td58td58td58td58td58td4AAAAAAAAAAAB8td58td58td58td58td4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB8td58td58td58td58td4AAAB8td58td58td58td58td4AAAAAAAAAAAAAAAAA
        AAAAAAB8td4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB8td4AAAB8td4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/j//8/AD/4MAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABwAAMD/wAfP//x/w==
</value>
  </data>
</root>