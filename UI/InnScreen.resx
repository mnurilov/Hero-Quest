<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPlayerName.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAHhJREFUSEu1
        jtEKgCAQBP3/nzaKFDsHydt1YF68bagkqK9HaPGoDYqPylCUlKAgmYZiK1NQaGUaipESFCRlKDpqg+K3
        R7DEx7/8G9v6Jo6jEdo0ERqqTtBIdYJGqh9o4LJDR5cdOrrs0NHlAx3c4qNbfHSLj0ZLvQAWC3SatAK4
        IwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbPlayerHealth.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAKBJREFUSEvt
        jUkOgDAMA/v/TwPOwlLcJUXlgBhpkGgcJ32aJbOH0I6Ets+uvdVgeUiRIYK5NmPU8vCCPCJQ0jJnaM7F
        3BTkB4OWlgV0noucyQMlR/LhI1H/IyFfPQJo4Kno1foDGhwVfVp7hy5ERY/WlaGLvWJfa9rQgpbY0/V+
        aFFJ5HUtDi3MRU7j49BiF3ONPWf6AWf6AWf6ASd4IKUV+BCld6Mqp/gAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pbPlayerMana.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAONJREFUSEvN
        jlkOwzAQQnPJ3P8oibDH6SxgO1U/ioSswGPa4191Cf9E7dh5XtSjB7iSguhhZrB9wqWgcmhlbPo0SgFh
        /MbY9hMfsaIMHRM84R6pIoxI71XYzLMwwKlTmm5YKOGk3IWd35YALwOTljvflQAvA51UH3LflQCvB1MH
        qS7kvisBXg+mXuWQ7Epgb4BnNh6SXQlMAVYG1/Em2dPQNL4D47jACubRtDSNXPb+BruzBDa0dUNBqx9r
        TN66fdEbWB6HrZei45GrPtu4peh4x9j2E3va+tfwYM1fKR9hFjqOGxLXKwDXys3aAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pbPlayerGold.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAMtJREFUSEvN
        jUkOxDAMw/L/X85LUqipB4FDZUEvFcCTJbp8KXXC69yi+vNER+XTLOWZ2Gi8E5Tson3T+ODwFHmajoMj
        oVuGeuK5Y2aDWuvI/+Z3Q7BI8ozbStpnKEWRpJnZXvIIFkjocA7JI1ggmcM5JI9ggWQO55A8ggWSOZxD
        8ggWSOZwDskjQyFKJMzM9pL3wRJJM24rac5Q7MpWvthhcCB0y1BPPHcbHJ0iT9P54HAX7ZtmnbtMEkds
        ND7N8ll0VH6bXpb5Qkq5AOhOCU4ilaHkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAMtJREFUSEvN
        jUkOxDAMw/L/X85LUqipB4FDZUEvFcCTJbp8KXXC69yi+vNER+XTLOWZ2Gi8E5Tson3T+ODwFHmajoMj
        oVuGeuK5Y2aDWuvI/+Z3Q7BI8ozbStpnKEWRpJnZXvIIFkjocA7JI1ggmcM5JI9ggWQO55A8ggWSOZxD
        8ggWSOZwDskjQyFKJMzM9pL3wRJJM24rac5Q7MpWvthhcCB0y1BPPHcbHJ0iT9P54HAX7ZtmnbtMEkds
        ND7N8ll0VH6bXpb5Qkq5AOhOCU4ilaHkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAqAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7
        Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7OvkAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAA
        AAA7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7OvkA
        AAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP36cP36cP36cP36cP3
        6cP36cP36cP36cP36cP36cP36cP36cP36cP36cM7Ovk7OvkAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAA
        AAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP36cP36cP36cP36cP36cP36cP36cP36cP36cP36cP36cP36cP3
        6cP36cM7Ovk7OvkAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP3
        6cNUbrL36cNUbrL36cP36cNUbrL36cNUbrL36cP36cNUbrL36cP36cM7Ovk7OvkAAAAAAAAAAAAAAAAA
        AABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP36cNUbrL36cNUbrL36cP36cNUbrL36cNU
        brL36cP36cNUbrL36cP36cM7Ovk7OvkAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAA
        AAA7Ovk7Ovn36cP36cNUbrL36cNUbrL36cNUbrJUbrL36cNUbrL36cNUbrJUbrL36cP36cM7Ovk7OvkA
        AAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP36cNUbrL36cNUbrJU
        brL36cNUbrL36cNUbrJUbrL36cNUbrL36cP36cM7Ovk7OvkAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAA
        AAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP36cNUbrL36cNUbrL36cP36cNUbrL36cNUbrL36cP36cNUbrL3
        6cP36cM7Ovk7OvkAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP3
        6cP36cP36cP36cP36cP36cP36cP36cP36cP36cP36cP36cP36cP36cM7Ovk7OvkAAAAAAAAAAAAAAAAA
        AABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovn36cP36cP36cP36cP36cP36cP36cP36cP36cP3
        6cP36cP36cP36cP36cP36cM7Ovk7OvkAAAAAAAAAAAAAAABpWkJpWkJpWkIAAAAAAAAAAAAAAAAAAAAA
        AAA7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7OvkA
        AAAAAAAAAAAAAABpWkJpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAA7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7
        Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7Ovk7OvkAAAAAAAAAAABpWkIAAABpWkJpWkIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aksAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aksA
        AAAAAAAAAAAAAAAAAAAAAAAAAABpWkIAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2
        aksAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aksAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAA
        AABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aksAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAB2aksAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2
        akt2akt2akt2akt2aktpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAB2akt2akt2akt2akt2akt2akt2akt2
        akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2akt2aktpWkJpWkIAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABpWkJpWkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA30v830v8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAA30v830v830v830v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA30v830v8AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD////z////8/////P////z////8/////P////z8AAB8/AAAfPwAAHz8AAB8/AA
        AfPwAAHz8AAB8/AAAfPwAAHz8AAB8/AAAePwAAHj8AAB0/7/39P+/98z/v/c8/gAAAPwAAAD////8///
        //P////z////4f////P//////////w==
</value>
  </data>
</root>